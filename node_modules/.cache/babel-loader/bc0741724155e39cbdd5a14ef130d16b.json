{"ast":null,"code":"var _jsxFileName = \"/home/luis/Documents/live/barcelove-client/src/features/users/Register.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useAddNewUserMutation } from \"./usersApiSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport useTitle from \"../../hooks/useTitle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst USER_REGEX = /^[A-z]{3,20}$/;\nconst PWD_REGEX = /^[A-z0-9!@#$%]{4,12}$/;\nconst EMAIL_REGEX = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\nconst Register = () => {\n  _s();\n  var _error$data;\n  useTitle('techNotes: New User');\n  const [addNewUser, {\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  }] = useAddNewUserMutation();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [validUsername, setValidUsername] = useState(false);\n  const [password, setPassword] = useState('');\n  const [validPassword, setValidPassword] = useState(false);\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [validConfirmPassword, setValidConfirmPassword] = useState(false);\n  const [email, setEmail] = useState('');\n  const [validEmail, setValidEmail] = useState(false);\n  useEffect(() => {\n    setValidUsername(USER_REGEX.test(username));\n  }, [username]);\n  useEffect(() => {\n    setValidPassword(PWD_REGEX.test(password));\n    setValidConfirmPassword(password === confirmPassword);\n  }, [password, confirmPassword]);\n  useEffect(() => {\n    setValidEmail(EMAIL_REGEX.test(email));\n  }, [email]);\n  useEffect(() => {\n    if (isSuccess) {\n      setUsername('');\n      setPassword('');\n      setConfirmPassword('');\n      setEmail('');\n      navigate('/dash/users');\n    }\n  }, [isSuccess, navigate]);\n  const onUsernameChanged = e => setUsername(e.target.value);\n  const onPasswordChanged = e => setPassword(e.target.value);\n  const onConfirmPasswordChanged = e => setConfirmPassword(e.target.value);\n  const onEmailChanged = e => setEmail(e.target.value);\n  const canSave = validUsername && validPassword && validConfirmPassword && validEmail && !isLoading;\n  const onSaveUserClicked = async e => {\n    e.preventDefault();\n    if (canSave) {\n      await addNewUser({\n        username,\n        password,\n        roles: [\"Manager\"],\n        email\n      });\n    }\n  };\n  const errClass = isError ? \"errmsg\" : \"offscreen\";\n  const validUserClass = !validUsername ? 'form__input--incomplete' : '';\n  const validPwdClass = !validPassword ? 'form__input--incomplete' : '';\n  const validEmailClass = !validEmail ? 'form__input--incomplete' : '';\n  const validConfirmPwdClass = !validConfirmPassword ? 'form__input--incomplete' : '';\n  const content = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: errClass,\n      children: error === null || error === void 0 ? void 0 : (_error$data = error.data) === null || _error$data === void 0 ? void 0 : _error$data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: onSaveUserClicked,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form__label\",\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: `form__input ${validEmailClass}`,\n        id: \"email\",\n        name: \"email\",\n        type: \"email\",\n        autoComplete: \"off\",\n        value: email,\n        onChange: onEmailChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form__label\",\n        htmlFor: \"confirmPassword\",\n        children: \"Confirm Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: `form__input ${validConfirmPwdClass}`,\n        id: \"confirmPassword\",\n        name: \"confirmPassword\",\n        type: \"password\",\n        value: confirmPassword,\n        onChange: onConfirmPasswordChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n  return content;\n};\n_s(Register, \"w4pvPUFxLf9pq662oV/QmYuqbWw=\", false, function () {\n  return [useTitle, useAddNewUserMutation, useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useState","useEffect","useAddNewUserMutation","useNavigate","FontAwesomeIcon","faSave","useTitle","jsxDEV","_jsxDEV","Fragment","_Fragment","USER_REGEX","PWD_REGEX","EMAIL_REGEX","Register","_s","_error$data","addNewUser","isLoading","isSuccess","isError","error","navigate","username","setUsername","validUsername","setValidUsername","password","setPassword","validPassword","setValidPassword","confirmPassword","setConfirmPassword","validConfirmPassword","setValidConfirmPassword","email","setEmail","validEmail","setValidEmail","test","onUsernameChanged","e","target","value","onPasswordChanged","onConfirmPasswordChanged","onEmailChanged","canSave","onSaveUserClicked","preventDefault","roles","errClass","validUserClass","validPwdClass","validEmailClass","validConfirmPwdClass","content","children","className","data","message","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","name","type","autoComplete","onChange","_c","$RefreshReg$"],"sources":["/home/luis/Documents/live/barcelove-client/src/features/users/Register.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useAddNewUserMutation } from \"./usersApiSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport useTitle from \"../../hooks/useTitle\";\n\nconst USER_REGEX = /^[A-z]{3,20}$/;\nconst PWD_REGEX = /^[A-z0-9!@#$%]{4,12}$/;\nconst EMAIL_REGEX = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n\nconst Register = () => {\n    useTitle('techNotes: New User');\n\n    const [addNewUser, { isLoading, isSuccess, isError, error }] = useAddNewUserMutation();\n    const navigate = useNavigate();\n\n    const [username, setUsername] = useState('');\n    const [validUsername, setValidUsername] = useState(false);\n    const [password, setPassword] = useState('');\n    const [validPassword, setValidPassword] = useState(false);\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [validConfirmPassword, setValidConfirmPassword] = useState(false);\n    const [email, setEmail] = useState('');\n    const [validEmail, setValidEmail] = useState(false);\n\n    useEffect(() => {\n        setValidUsername(USER_REGEX.test(username));\n    }, [username]);\n\n    useEffect(() => {\n        setValidPassword(PWD_REGEX.test(password));\n        setValidConfirmPassword(password === confirmPassword);\n    }, [password, confirmPassword]);\n\n    useEffect(() => {\n        setValidEmail(EMAIL_REGEX.test(email));\n    }, [email]);\n\n    useEffect(() => {\n        if (isSuccess) {\n            setUsername('');\n            setPassword('');\n            setConfirmPassword('');\n            setEmail('');\n            navigate('/dash/users');\n        }\n    }, [isSuccess, navigate]);\n\n    const onUsernameChanged = e => setUsername(e.target.value);\n    const onPasswordChanged = e => setPassword(e.target.value);\n    const onConfirmPasswordChanged = e => setConfirmPassword(e.target.value);\n    const onEmailChanged = e => setEmail(e.target.value);\n\n    const canSave = validUsername && validPassword && validConfirmPassword && validEmail && !isLoading;\n\n    const onSaveUserClicked = async (e) => {\n        e.preventDefault();\n        if (canSave) {\n            await addNewUser({ username, password, roles: [\"Manager\"], email });\n        }\n    };\n\n    const errClass = isError ? \"errmsg\" : \"offscreen\";\n    const validUserClass = !validUsername ? 'form__input--incomplete' : '';\n    const validPwdClass = !validPassword ? 'form__input--incomplete' : '';\n    const validEmailClass = !validEmail ? 'form__input--incomplete' : '';\n    const validConfirmPwdClass = !validConfirmPassword ? 'form__input--incomplete' : '';\n\n    const content = (\n        <>\n            <p className={errClass}>{error?.data?.message}</p>\n\n            <form className=\"form\" onSubmit={onSaveUserClicked}>\n                {/* ...other form elements... */}\n\n                <label className=\"form__label\" htmlFor=\"email\">\n                    Email:</label>\n                <input\n                    className={`form__input ${validEmailClass}`}\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    autoComplete=\"off\"\n                    value={email}\n                    onChange={onEmailChanged}\n                />\n\n                <label className=\"form__label\" htmlFor=\"confirmPassword\">\n                    Confirm Password:</label>\n                <input\n                    className={`form__input ${validConfirmPwdClass}`}\n                    id=\"confirmPassword\"\n                    name=\"confirmPassword\"\n                    type=\"password\"\n                    value={confirmPassword}\n                    onChange={onConfirmPasswordChanged}\n                />\n            </form>\n        </>\n    );\n\n    return content;\n};\n\nexport default Register;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}