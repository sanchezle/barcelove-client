{"ast":null,"code":"var _jsxFileName = \"/home/luis/Documents/live/barcelove-client/src/features/users/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useRegisterUserMutation } from '../auth/authApiSlice';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegisterForm() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [roles] = useState(['Manager']); // Set 'Manager' as the default role\n\n  const [registerUser, {\n    isLoading\n  }] = useRegisterUserMutation();\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  const passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/; // Adjust regex as needed\n\n  const handleRegister = async e => {\n    e.preventDefault();\n    if (!emailRegex.test(email)) {\n      // Handle invalid email format here\n      return;\n    }\n    if (!passwordRegex.test(password)) {\n      // Handle invalid password format here\n      return;\n    }\n    if (password !== confirmPassword) {\n      // Handle mismatched passwords here\n      return;\n    }\n    try {\n      await registerUser({\n        username,\n        password,\n        email,\n        roles\n      }).unwrap();\n      // Handle success - e.g., show success message, redirect to login, etc.\n    } catch (err) {\n      // Handle error - e.g., show error message\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleRegister,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"confirmPassword\",\n        children: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"confirmPassword\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: isLoading,\n      children: isLoading ? 'Registering...' : 'Register'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(RegisterForm, \"p5VOMO13y3P1DHArTX11exFd5Lk=\", false, function () {\n  return [useRegisterUserMutation];\n});\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useState","useRegisterUserMutation","Link","jsxDEV","_jsxDEV","RegisterForm","_s","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","email","setEmail","roles","registerUser","isLoading","emailRegex","passwordRegex","handleRegister","e","preventDefault","test","unwrap","err","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","target","disabled","_c","$RefreshReg$"],"sources":["/home/luis/Documents/live/barcelove-client/src/features/users/Register.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useRegisterUserMutation } from '../auth/authApiSlice';\nimport { Link } from 'react-router-dom';\n\nfunction RegisterForm() {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [email, setEmail] = useState('');\n    const [roles] = useState(['Manager']); // Set 'Manager' as the default role\n\n    const [registerUser, { isLoading }] = useRegisterUserMutation();\n\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    const passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/; // Adjust regex as needed\n\n    const handleRegister = async (e) => {\n        e.preventDefault();\n\n        if (!emailRegex.test(email)) {\n            // Handle invalid email format here\n            return;\n        }\n\n        if (!passwordRegex.test(password)) {\n            // Handle invalid password format here\n            return;\n        }\n\n        if (password !== confirmPassword) {\n            // Handle mismatched passwords here\n            return;\n        }\n\n        try {\n            await registerUser({ username, password, email, roles }).unwrap();\n            // Handle success - e.g., show success message, redirect to login, etc.\n        } catch (err) {\n            // Handle error - e.g., show error message\n        }\n    };\n\n    return (\n        <form onSubmit={handleRegister}>\n            <div>\n                <label htmlFor=\"username\">Username</label>\n                <input \n                    type=\"text\" \n                    id=\"username\" \n                    value={username} \n                    onChange={(e) => setUsername(e.target.value)}\n                />\n            </div>\n            <div>\n                <label htmlFor=\"password\">Password</label>\n                <input \n                    type=\"password\" \n                    id=\"password\" \n                    value={password} \n                    onChange={(e) => setPassword(e.target.value)}\n                />\n            </div>\n            <div>\n                <label htmlFor=\"confirmPassword\">Confirm Password</label>\n                <input \n                    type=\"password\" \n                    id=\"confirmPassword\" \n                    value={confirmPassword} \n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                />\n            </div>\n            <div>\n                <label htmlFor=\"email\">Email</label>\n                <input \n                    type=\"email\" \n                    id=\"email\" \n                    value={email} \n                    onChange={(e) => setEmail(e.target.value)}\n                />\n            </div>\n            <button type=\"submit\" disabled={isLoading}>\n                {isLoading ? 'Registering...' : 'Register'}\n            </button>\n        </form>\n    );\n}\n\nexport default RegisterForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}