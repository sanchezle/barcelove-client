{"ast":null,"code":"var _jsxFileName = \"/home/luis/Documents/live/barcelove-client/src/features/auth/PasswordResetRequest.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { usePasswordResetRequestMutation } from './authApiSlice';\nimport { setResetPasswordEmail } from './authSlice'; // Ensure this action is correctly imported\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordResetRequest = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [passwordResetRequest] = usePasswordResetRequestMutation();\n  const history = useNavigate();\n  const dispatch = useDispatch();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await passwordResetRequest(email).unwrap();\n      // Dispatch the email to the Redux store after a successful request\n      dispatch(setResetPasswordEmail(email));\n      // Navigate to the reset password page\n      console.log('here we shoulg go to resetPassword component');\n      history('/reset-password');\n    } catch (err) {\n      console.error('Failed to send password reset email:', err);\n      // Handle the error, e.g., show an error message to the user\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      placeholder: \"Enter your email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Send Reset Link\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(PasswordResetRequest, \"S9tiKu7kbIL9BczMUErNyuYDEeQ=\", false, function () {\n  return [usePasswordResetRequestMutation, useNavigate, useDispatch];\n});\n_c = PasswordResetRequest;\nexport default PasswordResetRequest;\nvar _c;\n$RefreshReg$(_c, \"PasswordResetRequest\");","map":{"version":3,"names":["useState","useNavigate","useDispatch","usePasswordResetRequestMutation","setResetPasswordEmail","jsxDEV","_jsxDEV","PasswordResetRequest","_s","email","setEmail","passwordResetRequest","history","dispatch","handleSubmit","e","preventDefault","unwrap","console","log","err","error","onSubmit","children","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/luis/Documents/live/barcelove-client/src/features/auth/PasswordResetRequest.js"],"sourcesContent":["import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { usePasswordResetRequestMutation } from './authApiSlice';\nimport { setResetPasswordEmail } from './authSlice'; // Ensure this action is correctly imported\n\nconst PasswordResetRequest = () => {\n    const [email, setEmail] = useState('');\n    const [passwordResetRequest] = usePasswordResetRequestMutation();\n    const history = useNavigate();\n    const dispatch = useDispatch();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            await passwordResetRequest(email).unwrap();\n            // Dispatch the email to the Redux store after a successful request\n            dispatch(setResetPasswordEmail(email));\n            // Navigate to the reset password page\n            console.log('here we shoulg go to resetPassword component')\n            history('/reset-password');\n        } catch (err) {\n            console.error('Failed to send password reset email:', err);\n            // Handle the error, e.g., show an error message to the user\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                placeholder=\"Enter your email\"\n            />\n            <button type=\"submit\">Send Reset Link</button>\n        </form>\n    );\n};\n\nexport default PasswordResetRequest;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,+BAA+B,QAAQ,gBAAgB;AAChE,SAASC,qBAAqB,QAAQ,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,oBAAoB,CAAC,GAAGR,+BAA+B,CAAC,CAAC;EAChE,MAAMS,OAAO,GAAGX,WAAW,CAAC,CAAC;EAC7B,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAML,oBAAoB,CAACF,KAAK,CAAC,CAACQ,MAAM,CAAC,CAAC;MAC1C;MACAJ,QAAQ,CAACT,qBAAqB,CAACK,KAAK,CAAC,CAAC;MACtC;MACAS,OAAO,CAACC,GAAG,CAAC,8CAA8C,CAAC;MAC3DP,OAAO,CAAC,iBAAiB,CAAC;IAC9B,CAAC,CAAC,OAAOQ,GAAG,EAAE;MACVF,OAAO,CAACG,KAAK,CAAC,sCAAsC,EAAED,GAAG,CAAC;MAC1D;IACJ;EACJ,CAAC;;EAED,oBACId,OAAA;IAAMgB,QAAQ,EAAER,YAAa;IAAAS,QAAA,gBACzBjB,OAAA;MACIkB,IAAI,EAAC,OAAO;MACZC,KAAK,EAAEhB,KAAM;MACbiB,QAAQ,EAAGX,CAAC,IAAKL,QAAQ,CAACK,CAAC,CAACY,MAAM,CAACF,KAAK,CAAE;MAC1CG,WAAW,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACF1B,OAAA;MAAQkB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAe;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEf,CAAC;AAACxB,EAAA,CAhCID,oBAAoB;EAAA,QAESJ,+BAA+B,EAC9CF,WAAW,EACVC,WAAW;AAAA;AAAA+B,EAAA,GAJ1B1B,oBAAoB;AAkC1B,eAAeA,oBAAoB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}