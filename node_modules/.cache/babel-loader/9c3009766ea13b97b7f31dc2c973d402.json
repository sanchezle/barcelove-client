{"ast":null,"code":"var _jsxFileName = \"/home/luis/Documents/live/barcelove-client/src/features/auth/ResetPassword.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useResetPasswordConfirmMutation } from './authApiSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  ; // Fetch email from Redux slice\n  const [token, setToken] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  const [resetPasswordConfirm, {\n    isLoading\n  }] = useResetPasswordConfirmMutation();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords don't match\");\n      return;\n    }\n    try {\n      // Ensure this payload structure matches what your backend expects\n      const payload = {\n        email,\n        token,\n        newPassword: password\n      };\n      await resetPasswordConfirm(payload).unwrap();\n      setMessage('Password reset successfully');\n      navigate('/login'); // Navigate to login page upon successful reset\n    } catch (err) {\n      var _err$data;\n      // Display error message from server or a default error message\n      setMessage(((_err$data = err.data) === null || _err$data === void 0 ? void 0 : _err$data.message) || 'Failed to reset password');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Set New Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"token\",\n        children: \"Token:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"token\",\n        value: token,\n        onChange: e => setToken(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"New Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"confirmPassword\",\n        children: \"Confirm Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"confirmPassword\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(ResetPassword, \"MnSWZOeQ6eONVE/53bnJJ9vmqNA=\", false, function () {\n  return [useNavigate, useResetPasswordConfirmMutation];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["useState","useSelector","useNavigate","useResetPasswordConfirmMutation","jsxDEV","_jsxDEV","ResetPassword","_s","token","setToken","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","navigate","resetPasswordConfirm","isLoading","handleSubmit","e","preventDefault","payload","email","newPassword","unwrap","err","_err$data","data","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","disabled","_c","$RefreshReg$"],"sources":["/home/luis/Documents/live/barcelove-client/src/features/auth/ResetPassword.js"],"sourcesContent":["import { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useResetPasswordConfirmMutation } from './authApiSlice';\n\nconst ResetPassword = () => {\n    ; // Fetch email from Redux slice\n    const [token, setToken] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [message, setMessage] = useState('');\n    const navigate = useNavigate();\n    const [resetPasswordConfirm, { isLoading }] = useResetPasswordConfirmMutation();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (password !== confirmPassword) {\n            setMessage(\"Passwords don't match\");\n            return;\n        }\n\n        try {\n            // Ensure this payload structure matches what your backend expects\n            const payload = { email, token, newPassword: password };\n            await resetPasswordConfirm(payload).unwrap();\n\n            setMessage('Password reset successfully');\n            navigate('/login'); // Navigate to login page upon successful reset\n        } catch (err) {\n            // Display error message from server or a default error message\n            setMessage(err.data?.message || 'Failed to reset password');\n        }\n    };\n\n    return (\n        <section>\n            <h1>Set New Password</h1>\n            <form onSubmit={handleSubmit}>\n                <label htmlFor=\"token\">Token:</label>\n                <input\n                    type=\"text\"\n                    id=\"token\"\n                    value={token}\n                    onChange={(e) => setToken(e.target.value)}\n                    required\n                />\n\n                <label htmlFor=\"password\">New Password:</label>\n                <input\n                    type=\"password\"\n                    id=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    required\n                />\n\n                <label htmlFor=\"confirmPassword\">Confirm Password:</label>\n                <input\n                    type=\"password\"\n                    id=\"confirmPassword\"\n                    value={confirmPassword}\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                    required\n                />\n\n                <button type=\"submit\" disabled={isLoading}>Reset Password</button>\n            </form>\n            {message && <p>{message}</p>}\n        </section>\n    );\n};\n\nexport default ResetPassword;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}